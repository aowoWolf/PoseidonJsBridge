apply plugin: 'com.android.library'

version = "1.0.0"

android {
    compileSdkVersion 28
    buildToolsVersion "27.0.3"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions { // 消除lint警告
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
}

// *******************************Jcenter**************************************
/*apply plugin: 'com.novoda.bintray-release'//添加

publish {
    userOrg = 'aowuwolf'//bintray.com你的用户名
    groupId = 'com.github.aowuWolf'//jcenter上的路径
    artifactId = 'poseidon'//项目名称
    publishVersion = '1.0.0'//版本号
    desc = 'A jsbridge solution that is easy to use, easy to extend, and has high performance.'
    website = 'https://github.com/aowoWolf/PoseidonJsBridge'
    repoName = 'charlesRepo'
}*/

// *******************************Maven**************************************
/*apply plugin: 'maven'
apply plugin: 'signing' //使用signing plugin做数字签名

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                pom.groupId = GROUP
                pom.artifactId = POM_ARTIFACT_ID
                pom.version = VERSION_NAME

                //指定项目部署到的中央库地址，UserName和Password就是Part 1中注册的账号。
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name POM_NAME
                    packaging POM_PACKAGING
                    description POM_DESCRIPTION
                    url POM_URL

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id POM_DEVELOPER_ID
                            name POM_DEVELOPER_NAME
                            email POM_DEVELOPER_EMAIL
                        }
                    }
                }
            }
        }
    }

    signing {
        sign configurations.archives
    }

    task androidJavadocs(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.sourceFiles
    }

    repositories {
        mavenCentral();
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
        archives file('poseidon.aar')
    }
}*/
